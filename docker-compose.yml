services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: file-upload-service
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    environment:
      PORT: ${PORT}
      API_PREFIX: ${API_PREFIX}
      DB_HOST: postgres
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      JWT_SECRET: ${JWT_SECRET}
      THROTTLE_TTL: ${THROTTLE_TTL}
      THROTTLE_LIMIT: ${THROTTLE_LIMIT}
      UPLOAD_DESTINATION: ${UPLOAD_DESTINATION}
      MAX_FILE_SIZE: ${MAX_FILE_SIZE}
      NODE_ENV: production
    ports:
      - '4000:4000'
    volumes:
      - ./uploads:/app/uploads
    networks:
      - app-network

  postgres:
    image: postgres:17-alpine
    container_name: file-upload-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:8-alpine
    container_name: file-upload-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
